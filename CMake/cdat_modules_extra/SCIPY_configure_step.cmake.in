message("Configuring SCIPY:\n@SCIPY_binary@")
set(ENV{@LIBRARY_PATH@} "@CMAKE_INSTALL_PREFIX@/lib:@cdat_EXTERNALS@/lib:$ENV{@LIBRARY_PATH@}")
set(ENV{VS_UNICODE_OUTPUT} "")

# As explained in site.cfg.example - See http://projects.scipy.org/scipy/browser/trunk/site.cfg.example
# Directories listed in variable such as library_dirs or source_dirs should be separated using os.pathsep
# On windows, the separator is ";" and ":" on unix-like platform
set(path_sep ":")
if(WIN32)
  set(path_sep ";")
endif()

# As explained in site.cfg.example, the library name without the prefix "lib" should be used.
# Nevertheless, on windows, only "libf2c" leads to a successful configuration and
# installation of SCIPY
set(f2c_libname "f2c")
if(WIN32)
  set(f2c_libname "libf2c")
endif()

set(_blas_dirs)
set(_lapack_dirs)

if (CDAT_USE_SYSTEM_LAPACK)
  foreach(_path ${BLAS_LIBRARIES})
    get_filename_component(_dir ${_path} PATH)
    list(APPEND _blas_dirs ${_dir})
  endforeach()

  foreach(_path ${LAPACK_LIBRARIES})
    get_filename_component(_dir ${_path} PATH)
    list(APPEND _lapack_dirs ${_dir})
  endforeach()
else()
  set(_blas_dirs @cdat_EXTERNALS@/lib)
  set(_lapack_dirs @cdat_EXTERNALS@/lib)
endif()

# setup the site.cfg file
file(WRITE "@SCIPY_binary@/site.cfg"
"
[blas]
library_dirs = ${_blas_dirs}
libraries = blas,${f2c_libname}

[lapack]
library_dirs = ${_lapack_dirs}
lapack_libs = lapack
")

execute_process(
  COMMAND "@PYTHON_EXECUTABLE@" setup.py config
  WORKING_DIRECTORY "@SCIPY_binary@"
  RESULT_VARIABLE res
  )

if(NOT ${res} EQUAL 0)
  message(FATAL_ERROR "Error in config of SCIPY")
endif()
message("Scipy config worked.")
